解題思路：
    最一開始的想法：
        1.  可以用減法的方式，每次都用迴圈扣掉可使用金幣的金額。如此一來，扣掉金幣的先後順序就可以作為計算排列組合所有可能的方式。
        2.  最後扣的結果若小於 0，該結果不計；反之等於零就紀錄。
        3.  例如：有硬幣 2$ 和 3$，要湊出六元。
            Round 1:    6-2(a)              6-3(b)
            Round 2:    6-2-2(a.a)          6-2-3(a.b)          6-3-2(b.a)          6-3-3(b.b)         ##其中(b.b)這項因為餘額為0所以 total+=1  ##下一輪(b.b)這項就不用往下進行迴圈扣除金額
            Round 3:    6-2-2-2(a.a.a)      6-2-2-3(a.a.b)      6-2-3-2(a.b.a)      6-2-3-3(a.b.b)      6-3-2-2(b.a.a)      6-3-2-3(b.a.b)  
            
        ps.但後來沒寫出來 2ㄏ2ㄏ (/_;) 就果斷換方法ㄌ

    最終程式碼的想法：
        1.  在程式碼裡我把他由小加到大來執行。
        2.  dp[i+ c[j]] = (dp[i+ c[j]] + dp[i]) 寫這行程式的原因：
            (1) n 元 變成 n+2 元 過程裡只多了 一個 2元硬幣，組合情況就是「n元的排列方式再加入一個2$硬幣」 ———— 對 n+2 元的硬幣組合數量(dp[n+2])而言只有dp[n]種排列方法
            (2) n-1 元 變成 (n-1)+3 元 過程裡只多了一個 3元硬幣，組合情況就是「n-1元的排列方式再加入一個 3$硬幣」 ———— 對 n+2 元的硬幣組合數量(dp[n+2])而言只有dp[n-1]種排列方法
            (3) 由上述可知，n+2元有 dp[n] 和 dp[n-1] 兩種排列方法數，且兩者排列情況不相同，所以要相加。
        3.  dp[n] 代表n元有幾種不一樣的表示金額方法。

            例如：有硬幣 2$ 和 3$，要湊出六元。
            先設基本的狀況 dp[2]=dp[3]=1
                Round 1:    dp[0+2]=dp[0+2]+dp[2]     dp[0+3]=dp[0+3]+dp[3]         
                Round 2:    dp[1+2]=dp[1+2]+dp[2]     dp[1+3]=dp[1+3]+dp[3]
                Round 3:    dp[2+2]=dp[2+2]+dp[2]            2+3
                Round 4:    3+2                              3+3
                Round 5:    4+2                             4+3>6
                Round 6:    5+2>6                           5+3>6
